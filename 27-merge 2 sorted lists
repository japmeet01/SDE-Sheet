/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        if(list1==null){
            return list2;
        }
         if(list2==null){
            return list1;
        }
        ListNode l1=null;
        ListNode l2=null;

        if(list1.val<list2.val){
             l1=list1;
             l2=list2;
        }else{
             l1=list2;
             l2=list1;
        }
        ListNode ans=l1;
        
        
        while(l1!=null){
            ListNode temp=null;
            while(l1.next!=null && l1.val<=l2.val){
                temp=l1;
                l1=l1.next;
            }
            if(l1.next==null && l1.val<=l2.val){
                l1.next=l2;
                break;
            }
            temp.next=l2;
            ListNode swap=l2;
            l2=l1;
            l1=swap;
        }
        
        
        return ans;
        
    }
}
